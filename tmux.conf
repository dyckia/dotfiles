# enable true color
set -g default-terminal 'tmux-256color'
set -as terminal-overrides ',xterm*:Tc:sitm=\E[3m'

# reload config file
bind r source-file ~/.tmux.conf \; display "Config reloaded"

# copy-paste like vim
bind Escape copy-mode
bind-key -Tcopy-mode-vi 'v' send -X begin-selection
bind-key -Tcopy-mode-vi 'y' send -X copy-selection
unbind p
bind p pasteb
setw -g mode-keys vi

# swith pane like vim
bind h select-pane -L
bind l select-pane -R
bind k select-pane -U
bind j select-pane -D
# resize pane size
bind H resize-pane -L 10
bind L resize-pane -R 10
bind K resize-pane -U 5
bind J resize-pane -D 5

# start windows & pane from 1
set -g base-index 1
setw -g pane-base-index 1

# renumber windows
set-option -g renumber-windows on

# enable mouse
set -g mouse

# enable tmuxline
source-file ~/.Tline

# Set Prefix to `
# unbind C-b
# set -g prefix `
# bind ` send-prefix

# new split in current pane (horizontal / vertical)
# bind-key c split-window -v # split pane horizontally
# bind-key v split-window -h # split pane vertically
# unbind '"'
# unbind %

# list panes
# bind-key Space list-panes

# previous pane
# bind-key -n C-up prev
# bind-key -n C-left prev

# next pane
# bind-key -n C-right next
# bind-key -n C-down next

# --------some useful functions--------
# # repeat last shell command on right pane (if it happens to be a shell)
# bind-key s select-pane -t 1 \; send-keys C-c Up C-m \; last-pane

# # swap right pane in window 0 with default pane in window 1
# #
# # make sure our current window is listed as 0
# # create a second window if it doesn't exist
# # select our 0 window again in case we created a new one
# # select our second pane in 0 window
# # join that pane to window 1
# # select the pane above the one we just moved there
# # move that pane to window 0
# # send the up arrow and enter to that pane (run last shell command)
# # switch to last pane, which will be window 0, pane 0 (primary left)
# # make sure we are horiontal-even
# # redraw vim -- since it gets fucked up in this build when selecting
# #   layout programmatically. This whole thing assumes vim in left pane.
# bind-key d \
#   if-shell 'tmux select-window -t :0' '' 'move-window -t :0' \; \
#   if-shell 'test $(tmux list-panes | wc -l) -gt 1' '' 'split-window -h' \; \
#   if-shell 'tmux select-window -t :1' '' 'new-window' \; \
#   select-window -t 0 \; \
#   select-pane -t 1 \; \
#   join-pane -t 1.0 \; \
#   select-pane -U \; \
#   join-pane -h -t 0.0 \; \
#   last-pane
